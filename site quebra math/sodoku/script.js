const puzzles = {
    easy: [
      {
        puzzle: '530070000600195000098000060800060003400803001700020006060000280000419005000080079',
        solution: '534678912672195348198342567859761423426853791713924856961537284287419635345286179'
      },
      {
        puzzle: '000000907000420180000705026100904000050000040000507009920108000034059000507000000',
        solution: '483621957765423189291785326176934852859172643342567819928148735634259178517396294'
      },
      {
        puzzle: '006000000000010000200000307070009000000020004000700010060105000008000000000000400',
        solution: '186347952743215869259986317371469582695823174824751613467135298518294736932678451'
      },
      {
        puzzle: '000003700000700010000000040805000090070050002020000083060000000010009000004200000',
        solution: '981543726342768915657291348835126497179854632426937183263415879718369254594287361'
      },
      {
        puzzle: '000000000200080300070004020000607004040000030800302000050100040003090007000000000',
        solution: '438921765216785349971364825325617984649853132897432651752178493183249517964596218'
      },
      {
        puzzle: '040010000050000600000000000709000000000080090080000104000000000000700060000090020',
        solution: '846917352153428679972653418719234586324581791685179234298315746431762985567894123'
      }
    ],
    medium: [
      {
        puzzle: '000260701680070090190004500820100040004602900050003028009300074040050036703018000',
        solution: '435269781682571493197834562826195347374682915951743628519326874248957136763418259'
      },
      {
        puzzle: '302609000000000705700100006000802000000000000000304000200001009106000000000908403',
        solution: '312679548894513765765148326631892174948735612527364891283451679176283954459918237'
      },
      {
        puzzle: '100200000060070084030000200000005008000000000500100000001000090250060030000003006',
        solution: '185294367962371584437658219341725698678439125529186743713842956256967431894513672'
      },
      {
        puzzle: '000000080008000020000930600900000005000000700007000004003059000010000300050000000',
        solution: '594216783138745926762938615921384675436127598857693124373859241219476357685321749'
      },
      {
        puzzle: '000000030000085009000704000004000000700508003000000400000106000900350000060000000',
        solution: '681279534247385169539764281354691728796528143128437956473916852912358467865742391'
      },
      {
        puzzle: '500000000070000094000000800000103008000000000600204000003000000890000020000000001',
        solution: '581329467276851394349786812452193678138675249697284135713962548894517326265438791'
      }
    ],
    hard: [
      {
        puzzle: '100007090030020008009600500005300900010080002600004000300000010040000007007000300',
        solution: '145237896836921748279685431725316984914879652683454219392748165548163927167592843'
      },
      {
        puzzle: '000000000000003085001020000000507000004000100090000000500000073002010000000040009',
        solution: '465839721729413685831726594186547392374692158592381467548964273213178946697245819'
      },
      {
        puzzle: '000000907000420180000705026100904000050000040000507009920108000034059000507000000',
        solution: '483621957765423189291785326176934852859172643342567819928148735634259178517396294'
      },
      {
        puzzle: '700000000000080009000600008000007000300010004000300000200004000800030000000000003',
        solution: '781239456432185679965674138258467391396812754147395826219543867873926541654718293'
      },
      {
        puzzle: '000000010400000000020000300050407000008010070000602080007000090000000002060000000',
        solution: '378569214461238759925741368653487921298316475714952683847123596139675842562894137'
      },
      {
        puzzle: '600120384000000000000050000000804001000000720000000000000000000000000000000000000',
        solution: '695127384748396512213458697567834921139265748824719356356982471471563289982641735'
      }
    ]
  };
  
  
  let currentBoard = [];
  let solutionBoard = [];
  let errors = 0;
  
  function startGame() {
    const level = document.getElementById("difficulty").value;
    const boardElement = document.getElementById("sudoku-board");
  
    const gameList = puzzles[level];
    const randomIndex = Math.floor(Math.random() * gameList.length);
    const game = gameList[randomIndex];
  
    solutionBoard = game.solution.split('');
    currentBoard = game.puzzle.split('');
    errors = 0;
    document.getElementById("errors").textContent = errors;
  
    boardElement.innerHTML = '';
  
    currentBoard.forEach((val, i) => {
      const cell = document.createElement("input");
      cell.type = "text";
      cell.maxLength = 1;
      cell.classList.add("cell");
  
      // Espaçamento entre blocos 3x3 (colunas)
      if ((i % 9 + 1) % 3 === 0 && (i % 9 + 1) !== 9) {
        cell.style.marginRight = '5px';
      }
  
      // Espaçamento entre blocos 3x3 (linhas)
      if (Math.floor(i / 9) % 3 === 2 && Math.floor(i / 9) !== 8) {
        cell.style.marginBottom = '5px';
      }
  
      if (val !== "0") {
        cell.value = val;
        cell.disabled = true;
        cell.classList.add("fixed");
      } else {
        cell.addEventListener("input", (e) => handleInput(e, i, cell));
      }
  
      boardElement.appendChild(cell);
    });
  }
  
  function handleInput(e, index, cell) {
    const value = e.target.value;
  
    // Aceita só 1 a 9
    if (!/^[1-9]$/.test(value)) {
      cell.value = '';
      cell.classList.remove("error");
      return;
    }
  
    if (value === solutionBoard[index]) {
      currentBoard[index] = value;
      cell.disabled = true;
      cell.style.color = "green";
      cell.classList.remove("error");
      checkWin();
    } else {
      cell.classList.add("error");
      currentBoard[index] = value;
      errors++;
      document.getElementById("errors").textContent = errors;
  
      if (errors >= 3) {
        setTimeout(() => {
          alert("Você errou 3 vezes! Jogo reiniciado!");
          startGame();
        }, 100);
      }
    }
  }
  
  function checkWin() {
    if (currentBoard.join('') === solutionBoard.join('')) {
      setTimeout(() => {
        alert("Parabéns! Você completou o Sudoku!");
        startGame();
      }, 100);
    }
  }
  